name: Node.js CI

on:
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

#      - name: Use Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '18.x'
#
#      - name: Bootstrap
#        run: yarn && npx oao bootstrap
#
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
        with:
          path: packages/hub

      - name: Show version number
        run: echo "${{ steps.package-version.outputs.current-version }}"

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_NODE_ENV: production
          envkey_CLERK_API_KEY: ${{ secrets.CLERK_API_KEY }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          file_name: .env

      - name: Add database certificate to build directory
        run: cat ${{ secrets.MONGODB_PRIVATE_KEY }} >> packages/hub/X509-cert.pem

      - name: 'ls'
        run: ls packages/hub

      - name: Copy .env file to remote
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: ".env"
          target: "~/"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./packages/hub
          platforms: linux/amd64
          push: true
          tags: "ghcr.io/${{ github.repository_owner }}/smart-blinds/hub:${{ steps.package-version.outputs.current-version }}"

      - name: multiple command
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo ${{ secrets.GH_DOCKER_PACKAGES_READ }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            docker pull ghcr.io/${{ github.repository_owner }}/smart-blinds/hub:${{ steps.package-version.outputs.current-version }}
            docker stop hub && docker rm hub
            docker run --env-file .env -d -p 3000:3000 --name hub ghcr.io/${{ github.repository_owner }}/smart-blinds/hub:${{ steps.package-version.outputs.current-version }}
            rm .env
